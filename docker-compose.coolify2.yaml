version: "3.1"

services:
  webserver:
    image: my_php_apache:latest
    build:
      context: ./
      dockerfile: php.Dockerfile
    container_name: webserver
    environment:
      - MYSQL_PASSWORD=pass
      - MYSQL_USERNAME=root
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fs", "-S", "--max-time", "2", "http://localhost:80"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - /etc/localtime:/etc/localtime:ro
      # - ./www/:/var/www/html/
      # - ./.env:/var/www/html/.env
      - ./logs/:/var/log/
      - ./backups/:/var/www/html/backups/
    depends_on:
      - mariadb
    networks:
      my_network:
        aliases:
          - webserver


  mariadb:
    build:
      context: ./
      dockerfile: mariadb.Dockerfile
    # image: mariadb:latest
    # container_name: mariadb
    restart: always
    environment:
      - MARIADB_ROOT_PASSWORD=pass
      - MARIADB_DATABASE=j_tasks
    volumes:
      - ./database:/var/lib/mysql
      # - ./j_tasks.sql:/docker-entrypoint-initdb.d/j_tasks.sql
    # healthcheck:
    #   test: ["CMD-SHELL", "mariadb ping | grep 'mysqld is alive' || exit 1"]
    #   interval: 2s
    #   retries: 120
    networks:
      my_network:
        aliases:
          - mariadb

  phpmyadmin:
    image: linuxserver/phpmyadmin
    build:
      context: ./
      dockerfile: phpmyadmin.Dockerfile
    restart: always
    environment:
      PMA_HOST: mariadb
      PMA_USER: root
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      UPLOAD_LIMIT: 10M
    healthcheck:
      test: ["CMD", "curl", "-Ss", "http://localhost/robots.txt"]
      start_period: 5s
      interval: 3s
      timeout: 60s
      retries: 10
    depends_on:
      - mariadb
    networks:
      my_network:
        aliases:
          - phpmyadmin


  nginx:
    # image: nginx
    depends_on:
      - webserver
      - phpmyadmin
    build:
      context: ./
      dockerfile: nginx.Dockerfile

    restart: always
    networks:
      - my_network
    # ports:
    #   - "80:80"
    #   - "443:443"
    # environment:
    #   - WEBSERVER_HOST=${WEBSERVER_HOST}
    #   - PHPMYADMIN_HOST=${PHPMYADMIN_HOST}
    # volumes:
      # - ./configs/nginx.conf:/etc/nginx/nginx.conf
      # - ./certs/:/etc/nginx/certs/
      # - ./.htpasswd:/etc/nginx/.htpasswd
      # - ./404.html:/etc/nginx/404.html
    # depends_on:
    #   - webserver
    #   - phpmyadmin

networks:
  my_network:
